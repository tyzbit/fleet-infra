apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: default-backend
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-edit-in-place: "false"
    external-dns.alpha.kubernetes.io/exclude: "true"
spec:
  defaultBackend:
    service: 
      name: default-backend
      port: 
        number: 80
  tls:
    - hosts:
        - "*.${blog_domain}"
      secretName: letsencrypt
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unraid
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: unraid-credentials
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-edit-in-place: "false"
    external-dns.alpha.kubernetes.io/exclude: "true"
spec:
  tls:
    - hosts:
        - &host "unraid.${personal_domain}"
      secretName: *host
  rules:
  - host: *host
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: simulacrum
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: architect
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: architect-credentials
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-edit-in-place: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    external-dns.alpha.kubernetes.io/exclude: "true"
spec:
  tls:
    - hosts:
        - &host "architect.${personal_domain}"
      secretName: *host
  rules:
  - host: *host
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: architect
            port:
              number: 443
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: warehouse
#   namespace: default
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/proxy-body-size: 256m
#     cert-manager.io/cluster-issuer: letsencrypt
#     acme.cert-manager.io/http01-edit-in-place: "false"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
# spec:
#   tls:
#     - hosts:
#         - "warehouse-01.myasustor.com"
#       secretName: warehouse-01.myasustor.com-tls
#   rules:
#   - host: warehouse-01.myasustor.com
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: warehouse
#             port:
#               number: 8001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: takeout
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-edit-in-place: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    external-dns.alpha.kubernetes.io/exclude: "true"
spec:
  tls:
    - hosts:
        - &host "takeout.${personal_domain}"
      secretName: *host
  rules:
  - host: *host
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: architect
            port:
              number: 6443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: default-backend-${personal_domain}
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-edit-in-place: "false"
    external-dns.alpha.kubernetes.io/exclude: "true"
spec:
  tls:
    - hosts:
        - &host "*.${personal_domain}"
      secretName: ${personal_domain}
  rules:
  - host: *host
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: default-backend
            port:
              number: 80