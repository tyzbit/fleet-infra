apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: wordpress
  namespace: flux-system
spec:
  releaseName: wordpress
  targetNamespace: default
  chart:
    spec:
      chart: wordpress
      version: "10.10.3"
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  interval: 1m0s
  valuesFrom:
  - kind: Secret
    name: wordpress-values
    valuesKey: wordpressTablePrefix
    targetPath: wordpressTablePrefix
  - kind: Secret
    name: wordpress-values
    valuesKey: mariadbAuthRootPassword
    targetPath: mariadb.auth.rootPassword
  - kind: Secret
    name: wordpress-values
    valuesKey: mariadbAuthUsername
    targetPath: mariadb.auth.username
  - kind: Secret
    name: wordpress-values
    valuesKey: mariadbAuthPassword
    targetPath: mariadb.auth.password
  - kind: Secret
    name: wordpress-values
    valuesKey: mariadbAuthDatabase
    targetPath: mariadb.auth.database
  - kind: Secret
    name: wordpress-values
    valuesKey: smtpHost
    targetPath: smtpHost
  - kind: Secret
    name: wordpress-values
    valuesKey: smtpPort
    targetPath: smtpPort
  - kind: Secret
    name: wordpress-values
    valuesKey: smtpUser
    targetPath: smtpUser
  - kind: Secret
    name: wordpress-values
    valuesKey: smtpPassword
    targetPath: smtpPassword
  values:
    image:
      tag: "5.7.1" # {"$imagepolicy": "flux-system:wordpress:tag"}
      pullPolicy: Always
      pullSecrets:
      - name: docker-hub
    wordpressConfigureCache: true
    existingSecret: wordpress
    allowEmptyPassword: false
    allowOverrideNone: false
    customHTAccessCM: wordpress-htaccess
    wordpressExtraConfigContent: |
      define('MULTISITE', true);
      define('SUBDOMAIN_INSTALL', false);
      define('DOMAIN_CURRENT_SITE', '192.168.1.68');
      define('PATH_CURRENT_SITE', '/');
      define('SITE_ID_CURRENT_SITE', 1);
      define('BLOG_ID_CURRENT_SITE', 1);
    resources:
      requests:
        cpu: 200m
      limits:
        memory: 1Gi
    ingress:
      enabled: true
      # annotations: 
      #   kubernetes.io/ingress.class: nginx
      #   cert-manager.io/cluster-issuer: letsencrypt
      #   acme.cert-manager.io/http01-edit-in-place: "true"
      hostname: "qtosw.com"
      extraHosts:
      - name: "tylerphawkins.com"
        path: /
      tls: true
      certManager: true
    service:
      type: LoadBalancer
    persistence:
      accessModes:
      - ReadWriteMany
      storageClass: longhorn
      size: 10Gi
    volumePermissions:
      enabled: true
    metrics:
      enabled: true
    memcached:
      enabled: true
    mariadb:
      primary:
        persistence:
          storageClass: longhorn
          size: 8Gi
