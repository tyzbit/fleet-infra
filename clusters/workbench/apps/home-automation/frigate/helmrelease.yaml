# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.5.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: flux-system
spec:
  releaseName: *app
  targetNamespace: home-automation
  timeout: 15m
  interval: 2m0s
  chart:
    spec:
      chart: app-template
      version: "3.6.0"
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      *app :
        replicas: 1
        type: statefulset
        labels:
          kube-image-keeper.enix.io/image-cache: disabled

        containers:
          *app :
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: "0.14.1"
              pullPolicy: Always
            securityContext:
              privileged: true
            envFrom:
              - secretRef:
                  name: *app
            env:
              TZ: America/New_York
            resources:
              requests:
                cpu: 1000m
              limits:
                memory: 8Gi

    persistence:
      data:
        existingClaim: frigate-data-nas
        advancedMounts:
          *app :
            *app :
              - path: /media/frigate
      config:
        name: frigate-config
        type: configMap
        advancedMounts:
          *app :
            *app :
              - path: /config/config.yml
                readOnly: true
                subPath: config.yml
      usb:
        type: hostPath
        hostPath: /dev/bus/usb
      dri:
        type: hostPath
        hostPath: /dev/dri
      shm:
        type: hostPath
        hostPath: /dev/shm
      cache:
        type: emptyDir
        advancedMounts:
          *app :
            *app :
              - path: /tmp/cache
        # medium: Memory
        # sizeLimit: 2Gi

    service:
      main:
        controller: *app
        type: ClusterIP
        ports:
          http:
            primary: true
            port: 80
            targetPort: 5000
          rtsp:
            port: &rtsp 8554
            targetPort: *rtsp
          webrtc:
            port: &webrtc 8555
            targetPort: *webrtc

    ingress:
      *app :
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 1024m
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "20"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "14400"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "14400"
          nginx.ingress.kubernetes.io/auth-url: "http://frigate-oauth2-proxy.home-automation.svc.cluster.local/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
          cert-manager.io/cluster-issuer: letsencrypt
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/target: ${cloudflared_tunnel_uuid}.cfargotunnel.com
        hosts:
          - host: &host "frigate.${personal_domain}"
            paths: &frigatepath
              - path: "/"
                service:
                  identifier: main
        tls:
          - hosts:
              - *host
            secretName: *host

      internal:
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/exclude: "true"
        hosts:
          - host: "frigate.home.arpa"
            paths: *frigatepath
          - host: "frigate"
            paths: *frigatepath
        tls:
          - hosts:
              - "*.home.arpa"
            secretName: internal-wildcard-tls

      noauth:
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/exclude: "true"
        hosts:
          - host: *host
            paths:
              - path: "/api/events"
                service:
                  identifier: main
        tls:
          - hosts:
              - *host
            secretName: *host

      oauth:
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/exclude: "true"
        hosts:
          - host: *host
            paths:
              - path: "/oauth2"
                service:
                  name: frigate-oauth2-proxy
                  port: 80
        tls:
          - hosts:
              - *host
            secretName: *host
