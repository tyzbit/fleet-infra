# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app unifi
  namespace: flux-system
spec:
  releaseName: *app
  targetNamespace: networking
  timeout: 5m
  interval: 2m0s
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    defaultPodOptions:
      hostNetwork: true
    controllers:
      *app :
        replicas: 1
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          *app :
            image:
              repository: jacobalberty/unifi
              tag: v9.1.120
            env:
              RUNAS_UID0: "false"
              BIND_PRIV: "false"
              UNIFI_UID: "999"
              UNIFI_GID: "999"
              UNIFI_STDOUT: "true"
              JVM_INIT_HEAP_SIZE: 256M
              JVM_MAX_HEAP_SIZE: 256M
              CERTNAME: tls.crt
              CERT_PRIVATE_NAME: tls.key
              CERT_IS_CHAIN: "true"
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi

    persistence:
      unifi-config:
        existingClaim: unifi-config
        advancedMounts:
          *app :
            *app :
              - path: /unifi/data
                subPath: data
              - path: /unifi/log
                subPath: log
              - path: /unifi/run
                subPath: run
      unifi-cert:
        name: &host unifi.${home_domain}
        type: secret
        globalMounts:
          - path: /unifi/cert

    # most ports exposed via hostNetwork
    service:
      main:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: 8443
            protocol: HTTPS
          # controller: &tcp
          #   protocol: TCP
          #   port: 8080
    #       speedtest:
    #         <<: *tcp
    #         port: 6789
    #       stun: &udp
    #         port: 3478
    #         protocol: UDP
    #       syslog:
    #         <<: *udp
    #         port: 5514
    #       discovery:
    #         <<: *udp
    #         port: 10001

    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ${home_domain_ddns}
          nginx.ingress.kubernetes.io/proxy-body-size: 4096m
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        labels:
          use-cloudflare-dns-solver: "true"
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: main
        tls:
          - hosts:
              - *host
            secretName: *host

      internal:
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          external-dns.alpha.kubernetes.io/exclude: "true"
        hosts:
          - host: "unifi.home.arpa"
            paths:
              - path: /
                service:
                  identifier: main
        tls:
          - hosts:
              - "*.home.arpa"
            secretName: internal-wildcard-tls
