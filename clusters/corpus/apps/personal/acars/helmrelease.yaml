# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.7.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app acars
  namespace: flux-system
spec:
  targetNamespace: personal
  releaseName: *app
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: "3.7.0"
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    common_settings: &common_settings
      annotations:
        reloader.stakater.com/auto: "true"
      pod:
        nodeSelector:
          hackrf: "true"

    controllers:
      acarsdec:
        <<: *common_settings
        replicas: 1
        containers:
          acarsdec:
            image:
              repository: ghcr.io/sdr-enthusiasts/docker-acarsdec
              tag: latest-build-412
            env:
              FEED_ID: FEED-1
              TZ: Etc/UTC
              SOAPYSDR: driver=hackrf
              FREQUENCIES: "131.550;131.725;130.025"
              SERVER: acarsrouter
              SERVER_PORT: "5550"
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 100Mi
            #   limits:
            #     memory: 250Mi

      dumpvdl2:
        <<: *common_settings
        replicas: 1
        containers:
          dumpvdl2:
            image:
              repository: ghcr.io/sdr-enthusiasts/docker-dumpvdl2
              tag: latest-build-348
            env:
              FEED_ID: VDL-2
              TZ: Etc/UTC
              SOAPYSDR: driver=sdrplay
              FREQUENCIES: "136.975;136.650"
              ZMQ_MODE: server
              ZMQ_ENDPOINT: tcp://0.0.0.0:45555
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 100Mi
            #   limits:
            #     memory: 250Mi

      acarsrouter:
        <<: *common_settings
        replicas: 1
        containers:
          acarsrouter:
            image:
              repository: ghcr.io/sdr-enthusiasts/acars_router
              tag: 1.3.1_linux_amd64
            env:
              FEED_ID: VDL-2
              TZ: Etc/UTC
              AR_SEND_UDP_ACARS: 127.0.0.1:5550
              AR_SEND_UDP_VDLM2: 127.0.0.1:5555
              AR_RECV_ZMQ_VDLM2: 127.0.0.1:45555
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 100Mi
            #   limits:
            #     memory: 250Mi

      acarshub:
        <<: *common_settings
        replicas: 1 # active nas
        type: statefulset
        containers:
          acarshub:
            image:
              repository: ghcr.io/sdr-enthusiasts/docker-acarshub
              tag: v3.8.0Build1379_nohealthcheck
            env:
              FEED_ID: VDL-2
              TZ: Etc/UTC
              ENABLE_ADSB: "false"
              ENABLE_ACARS: external
              ENABLE_VDLM: external
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 100Mi
            #   limits:
            #     memory: 250Mi

    persistence:
      usb:
        type: hostPath
        hostPath: /dev/bus/usb
        advancedMounts:
          acarsdec:
            acarsdec:
              - path: /dev/bus/usb
          dumpvdl2:
            dumpvld2:
              - path: /dev/bus/usb
      # run:
      #   type: emptyDir
      acarshub:
        existingClaim: acars-config-nas
        advancedMounts:
          acarshub:
            acarshub:
              - path: /run/acars

    service:
      acarsrouter:
        controller: acarsrouter
        type: ClusterIP
        ports:
          router:
            port: 5550
      dumpvdl2:
        controller: dumpvdl2
        type: ClusterIP
        ports:
          vdl:
            port: 45555
      acarshub:
        controller: acarshub
        type: ClusterIP
        ports:
          http:
            port: 80
          json1:
            port: 5550
          json2:
            port: 5555
          jsonudp1:
            port: 15550
          jsonudp2:
            port: 15555

    ingress:
      acarshub:
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "http://acars-oauth2-proxy.personal.svc.cluster.local/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
          cert-manager.io/cluster-issuer: letsencrypt
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/target: ${cloudflared_tunnel_uuid}.cfargotunnel.com
        hosts:
          - host: &host "acars.${personal_domain}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: acarshub
                  port: 80
        tls:
          - hosts:
              - *host
            secretName: *host

      oauth:
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/exclude: "true"
        labels:
          use-cloudflare-dns-solver: "true"
        hosts:
          - host: *host
            paths:
              - path: "/oauth2"
                service:
                  name: acars-oauth2-proxy
                  port: 80
        tls:
          - hosts:
              - *host
            secretName: *host
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name acars-oauth2-proxy
  namespace: flux-system
spec:
  targetNamespace: personal
  releaseName: *name
  chart:
    spec:
      chart: oauth2-proxy
      version: "7.11.0"
      sourceRef:
        kind: HelmRepository
        name: oauth2-proxy
        namespace: flux-system
  interval: 2m0s
  values:
    replicaCount: 1
    extraArgs:
      provider: github
      github-org: "${blog_name}"
      github-team: "super-admins,acars"
      cookie-expire: 168h0m0s
    config:
      existingSecret: acars-oauth2-proxy
