apiVersion: v1
kind: ConfigMap 
metadata:
  name: acars-scripts
  namespace: personal
data:
  setup-udev.sh: |
    #!bin/bash
    function log() {
      echo "[$(date "+%F %T")] $1"
    }

    function unbind() {
      echo -n $1 > sudo tee /sys/bus/pci/drivers/xhci_hcd/bind
    }

    function bind() {
      echo -n $1 > /sys/bus/pci/drivers/xhci_hcd/bind
    }

    log "Setting up udev..."
    cat <<EOF > /etc/udev/rules.d/20-nooelec-$SERIAL-sdr.rules
    SUBSYSTEM=="usb", ATTRS{idVendor}=="0bda", ATTRS{idProduct}=="2838", ATTRS{serial}=="$SERIAL", MODE="0666", SYMLINK+="nooelec_sdr_$SERIAL"
    EOF

    rm /tmp/healthcheck 2>/dev/null
    log "Reloading rules..."
    udevadm control --reload-rules
    while udevadm trigger; do
      if [[ ! -c /dev/nooelec_sdr_$SERIAL ]]; then
        log "Device not found"
        rm /tmp/healthcheck 2>/dev/null
        rm -rf /dev/nooelec_sdr_$SERIAL
        info=$(usb-devices | grep -B5 $SERIAL | grep -Eo "Bus=[0-9\s]+|Dev#=[0-9 ]+" | cut -d= -f2 | tr -d ' ')
        bus=$(log $info||awk '{print $1}')
        device=$(log $info||awk '{print $2}')
        if [[ ${bus}x == "x" ]] || [[ ${device}x == "x" ]]; then
          log "Couldn't get bus or device for serial $SERIAL, here's output of usb-devices"
          usb-devices | grep -B4 -A6 "Nooelec"
          controller=$(ls /sys/bus/pci/drivers/xhci_hcd | grep -E '[0-9a-f]{4}:[0-9a-f]{2}:[0-9a-f]{2}\.[0-9]')
          if [[ "$${controller}x" == "x" ]]; then
            log "Couldn't determine controller, here's /sys/bus/pci/drivers/xhci_hcd"
            ls /sys/bus/pci/drivers/xhci_hcd
            sleep 5
            continue
          else
            log "Unbinding controller $controller"
            unbind $controller
            sleep 1
            log "Binding controller $controller"
            bind $controller
            sleep_sec=$(( $RANDOM / 1000 ))
            log "Sleeping $sleep_sec..."
            sleep $sleep_sec
          fi
        else
          log "Resetting $bus/$device"
          usbreset "$bus/$device" || sleep 10
        fi
      else    
        log "Everything looks good now"
        touch /tmp/healthcheck
        sleep 60
      fi
    done
