---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ollama
  namespace: flux-system
spec:
  interval: 30m
  releaseName: *app
  targetNamespace: personal
  chart:
    spec:
      chart: app-template
      version: "4.3.0"
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      ollama:
        type: deployment
        replicas: 1
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          nodeSelector:
            longhorn: primary
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - topologyKey: "kubernetes.io/hostname"
                  labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                          - ollama
                          # - plex
        containers:
          ollama:
            image:
              repository: intelanalytics/ipex-llm-inference-cpp-xpu
              tag: 2.3.0-SNAPSHOT
            securityContext:
              privileged: true
            # command: [tail,-f,/dev/null]
            command: 
              - sh
              - -c
              - |
                mkdir -p /llm/ollama && 
                cd /llm/ollama && 
                init-ollama && 
                exec ./ollama serve
            env:
              # --- Intel GPU
              # SYCL_CACHE_PERSISTENT: "1"
              # SYCL_PI_LEVEL_ZERO_USE_IMMEDIATE_COMMANDLISTS: "0"
              # IPEX_LLM_MODEL_SOURCE: modelscope
              # ---
              DEVICE: Arc
              TZ: America/New_York
              # HSA_OVERRIDE_GFX_VERSION: 11.0.1 # force to use graphics card
              OLLAMA_CONTEXT_LENGTH: "6144"
              OLLAMA_FLASH_ATTENTION: "true"
              OLLAMA_HOST: 0.0.0.0
              OLLAMA_INTEL_GPU: "true"
              OLLAMA_KEEP_ALIVE: "-1" # Never unload models except to load new
              OLLAMA_KV_CACHE_TYPE: q8_0
              OLLAMA_LOAD_TIMEOUT: "600"
              OLLAMA_MAX_LOADED_MODELS: "1"
              OLLAMA_MODELS: &modelPath /models
              OLLAMA_NUM_CTX: "6144"
              OLLAMA_NUM_GPU: "999"
              # OLLAMA_NUM_GPU: "40"
              OLLAMA_NUM_PARALLEL: "1"
              OLLAMA_ORIGINS: "*"
              OLLAMA_SET_OT: "exps=CPU"
              # ZES_ENABLE_SYSMAN: "1"
            # probes:
            #   liveness:
            #     enabled: true
            #     type: HTTP
            #   readiness:
            #     enabled: true
            #     custom: true
            #     spec: 
            #       exec: {command: [sh,-c,/usr/bin/ollama run gemma3:4b ""]}
            resources:
              requests:
                cpu: 200m
              limits:
                memory: 10Gi

    persistence:
      ollama:
        existingClaim: ollama-data-nas
        globalMounts:
          - path: *modelPath
            subPath: models
          - path: /root/.ollama
            subPath: config
      dri:
        type: hostPath
        hostPath: /dev/dri
    service:
      main:
        controller: *app
        ports:
          http:
            port: 11434

    ingress:
      main:
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "14400"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "14400"
          nginx.ingress.kubernetes.io/proxy-body-size: 128m
        hosts:
          - host: ollama.home.arpa
            paths:
              - path: "/"
                service:
                  identifier: main
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ollama-cpu
  namespace: personal
spec:
  interval: 30m
  releaseName: ollama
  targetNamespace: personal
  chart:
    spec:
      chart: app-template
      version: "4.3.0"
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      ollama:
        type: deployment
        forceRename: ollama-cpu
        replicas: 0
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          nodeSelector:
            node-role.kubernetes.io/control-plane: "true"
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - topologyKey: "kubernetes.io/hostname"
                  labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                          - ollama

        containers:
          ollama:
            image:
              repository: docker.io/ollama/ollama
              tag: 0.12.0
            # command: [tail,-f,/dev/null]
            env:
              TZ: America/New_York
              OLLAMA_HOST: 0.0.0.0
              OLLAMA_KEEP_ALIVE: "-1" # Never unload models except to load new
              OLLAMA_ORIGINS: "*"
              OLLAMA_MODELS: &modelPath /models
              OLLAMA_LOAD_TIMEOUT: "600"
              OLLAMA_CONTEXT_LENGTH: "6144"
              OLLAMA_NUM_PARALLEL: "1"

            # probes:
            #   liveness:
            #     enabled: true
            #     type: HTTP
            #   readiness:
            #     enabled: true
            #     custom: true
            #     spec: 
            #       exec: {command: [sh,-c,/usr/bin/ollama run gemma3:4b ""]}
            resources:
              requests:
                cpu: 200m
              limits:
                memory: 12Gi

    persistence:
      ollama:
        # existingClaim: ollama-models-longhorn-objectstorage
        existingClaim: ollama-data-nas
        globalMounts:
          - path: *modelPath
            subPath: models
          - path: /root/.ollama
            subPath: config
      dri:
        type: hostPath
        hostPath: /dev/dri
