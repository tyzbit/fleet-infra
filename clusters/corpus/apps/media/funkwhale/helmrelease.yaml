apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: funkwhale
  namespace: media
spec:
  interval: 1m
  chart:
    spec:
      chart: funkwhale
      version: 2.0.5
      sourceRef:
        kind: HelmRepository
        name: ananace
        namespace: flux-system
      interval: 1m
  values:
    ingress:
      enabled: true
      className: nginx
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 500m
        kubernetes.io/tls-acme: "true"
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
      host: ${funkwhale_host}
      protocol: https

      tls:
        - secretName: ${funkwhale_host}-tls
          hosts:
            - ${funkwhale_host}
    persistence:
      enabled: true
      existingClaim: funkwhale-config-longhorn-webapp
      # storageClass: "-"

      ## Note; Using ReadWriteOnce for persistence will require the addition of
      ## a required affinity for the celery worker, as well as the use of only a
      ## single api replica.
      ##
      ## An example is provided for the worker affinity
      # accessMode: ReadWriteOnce
      # size: 1Gi
    ## API server configuration
    api:
      ## Additional mounts to add to the API container
      ## If using an external media mount it needs to be attached to both API and Front

      extraVolumeMounts:
        - &volumeMount
          mountPath: /srv/funkwhale/data/music/local
          name: music

      ## Additional volumes to add to the API container
      extraVolumes:
        - &extraVolume
          name: music
          persistentVolumeClaim:
            claimName: nas-volume1-music

    ## Web frontend and proxy
    front:
      ## Additional mounts to add to the frontend container
      extraVolumeMounts:
        - <<: *volumeMount

      ## Additional volumes to add to the frontend container
      extraVolumes:
        - <<: *extraVolume
    celery:
      worker:
        replicaCount: 1

        # Additional mounts to add to the worker pod
        extraVolumeMounts:
          - <<: *volumeMount

        extraVolumes:
          - <<: *extraVolume
