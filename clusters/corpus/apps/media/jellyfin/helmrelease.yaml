# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin 
  namespace: flux-system
spec:
  interval: 1h
  targetNamespace: media
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.7.3
  values:
    controllers:
      *app :
        type: statefulset
        replicas: 0 # active longhorn-webapp
        statefulset:
          podManagementPolicy: Parallel
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          nodeSelector:
            graphics: dri
            longhorn: primary
        containers:
          *app :
            env:
              JELLYFIN_CACHE_DIR: /cache
              JELLYFIN_CONFIG_DIR: /config/config
              JELLYFIN_DATA_DIR: /config
              JELLYFIN_FFMPEG: /usr/lib/jellyfin-ffmpeg/ffmpeg
              JELLYFIN_LOG_DIR: /config/log
              JELLYFIN_WEB_DIR: /usr/lib/jellyfin/bin/jellyfin-web
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: 'true'
            image:
              repository: jellyfin/jellyfin
              tag: 10.10.7
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 8192Mi
            securityContext:
              privileged: true

    persistence:
      cache:
        type: emptyDir
      dri:
        hostPath: /dev/dri
        type: hostPath
      media:
        existingClaim: nas-volume1-media
      config:
        existingClaim: jellyfin-longhorn-webapp

    service:
      main:
        controller: *app
        ports:
          http:
            port: 8096

    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/target: ${cloudflared_tunnel_uuid}.cfargotunnel.com
        hosts:
          - host: &host "jellyfin.${personal_domain}"
            paths:
              - path: "/"
                service:
                  identifier: main
        tls:
          - hosts:
              - *host
            secretName: *host
